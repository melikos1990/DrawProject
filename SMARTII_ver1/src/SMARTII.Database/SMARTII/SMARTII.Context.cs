//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMARTII.Database.SMARTII
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SMARTIIEntities : DbContext
    {
        public SMARTIIEntities()
            : base("name=SMARTIIEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BATCH_RECORD> BATCH_RECORD { get; set; }
        public virtual DbSet<BILL_BOARD> BILL_BOARD { get; set; }
        public virtual DbSet<CALLCENTER_NODE> CALLCENTER_NODE { get; set; }
        public virtual DbSet<CASE> CASE { get; set; }
        public virtual DbSet<CASE_ASSIGN_GROUP> CASE_ASSIGN_GROUP { get; set; }
        public virtual DbSet<CASE_ASSIGN_GROUP_USER> CASE_ASSIGN_GROUP_USER { get; set; }
        public virtual DbSet<CASE_ASSIGNMENT> CASE_ASSIGNMENT { get; set; }
        public virtual DbSet<CASE_ASSIGNMENT_COMMUNICATE> CASE_ASSIGNMENT_COMMUNICATE { get; set; }
        public virtual DbSet<CASE_ASSIGNMENT_COMMUNICATE_USER> CASE_ASSIGNMENT_COMMUNICATE_USER { get; set; }
        public virtual DbSet<CASE_ASSIGNMENT_COMPLAINT_INVOICE> CASE_ASSIGNMENT_COMPLAINT_INVOICE { get; set; }
        public virtual DbSet<CASE_ASSIGNMENT_COMPLAINT_INVOICE_CODE> CASE_ASSIGNMENT_COMPLAINT_INVOICE_CODE { get; set; }
        public virtual DbSet<CASE_ASSIGNMENT_COMPLAINT_INVOICE_USER> CASE_ASSIGNMENT_COMPLAINT_INVOICE_USER { get; set; }
        public virtual DbSet<CASE_ASSIGNMENT_COMPLAINT_NOTICE> CASE_ASSIGNMENT_COMPLAINT_NOTICE { get; set; }
        public virtual DbSet<CASE_ASSIGNMENT_COMPLAINT_NOTICE_USER> CASE_ASSIGNMENT_COMPLAINT_NOTICE_USER { get; set; }
        public virtual DbSet<CASE_ASSIGNMENT_CONCAT_USER> CASE_ASSIGNMENT_CONCAT_USER { get; set; }
        public virtual DbSet<CASE_ASSIGNMENT_HISTORY> CASE_ASSIGNMENT_HISTORY { get; set; }
        public virtual DbSet<CASE_ASSIGNMENT_RESUME> CASE_ASSIGNMENT_RESUME { get; set; }
        public virtual DbSet<CASE_ASSIGNMENT_USER> CASE_ASSIGNMENT_USER { get; set; }
        public virtual DbSet<CASE_CODE> CASE_CODE { get; set; }
        public virtual DbSet<CASE_COMPLAINED_USER> CASE_COMPLAINED_USER { get; set; }
        public virtual DbSet<CASE_CONCAT_USER> CASE_CONCAT_USER { get; set; }
        public virtual DbSet<CASE_FINISH_REASON_CLASSIFICATION> CASE_FINISH_REASON_CLASSIFICATION { get; set; }
        public virtual DbSet<CASE_FINISH_REASON_DATA> CASE_FINISH_REASON_DATA { get; set; }
        public virtual DbSet<CASE_HISTORY> CASE_HISTORY { get; set; }
        public virtual DbSet<CASE_ITEM> CASE_ITEM { get; set; }
        public virtual DbSet<CASE_NOTICE> CASE_NOTICE { get; set; }
        public virtual DbSet<CASE_PPCLIFE> CASE_PPCLIFE { get; set; }
        public virtual DbSet<CASE_REMIND> CASE_REMIND { get; set; }
        public virtual DbSet<CASE_RESUME> CASE_RESUME { get; set; }
        public virtual DbSet<CASE_SOURCE> CASE_SOURCE { get; set; }
        public virtual DbSet<CASE_SOURCE_CODE> CASE_SOURCE_CODE { get; set; }
        public virtual DbSet<CASE_SOURCE_HISTORY> CASE_SOURCE_HISTORY { get; set; }
        public virtual DbSet<CASE_SOURCE_USER> CASE_SOURCE_USER { get; set; }
        public virtual DbSet<CASE_TAG> CASE_TAG { get; set; }
        public virtual DbSet<CASE_TEMPLATE> CASE_TEMPLATE { get; set; }
        public virtual DbSet<CASE_WARNING> CASE_WARNING { get; set; }
        public virtual DbSet<CUSTOMER> CUSTOMER { get; set; }
        public virtual DbSet<ENTERPRISE> ENTERPRISE { get; set; }
        public virtual DbSet<HEADQUARTERS_NODE> HEADQUARTERS_NODE { get; set; }
        public virtual DbSet<ITEM> ITEM { get; set; }
        public virtual DbSet<JOB> JOB { get; set; }
        public virtual DbSet<KM_CLASSIFICATION> KM_CLASSIFICATION { get; set; }
        public virtual DbSet<KM_DATA> KM_DATA { get; set; }
        public virtual DbSet<NODE_JOB> NODE_JOB { get; set; }
        public virtual DbSet<NOTIFICATION_GROUP> NOTIFICATION_GROUP { get; set; }
        public virtual DbSet<NOTIFICATION_GROUP_EFFECTIVE_SUMMARY> NOTIFICATION_GROUP_EFFECTIVE_SUMMARY { get; set; }
        public virtual DbSet<NOTIFICATION_GROUP_RESUME> NOTIFICATION_GROUP_RESUME { get; set; }
        public virtual DbSet<NOTIFICATION_GROUP_USER> NOTIFICATION_GROUP_USER { get; set; }
        public virtual DbSet<OFFICIAL_EMAIL_GROUP> OFFICIAL_EMAIL_GROUP { get; set; }
        public virtual DbSet<OFFICIAL_EMAIL_HISTORY> OFFICIAL_EMAIL_HISTORY { get; set; }
        public virtual DbSet<ORGANIZATION_NODE_DEFINITION> ORGANIZATION_NODE_DEFINITION { get; set; }
        public virtual DbSet<PERSONAL_NOTIFICATION> PERSONAL_NOTIFICATION { get; set; }
        public virtual DbSet<PPCLIFE_EFFECTIVE_SUMMARY> PPCLIFE_EFFECTIVE_SUMMARY { get; set; }
        public virtual DbSet<PPCLIFE_RESUME> PPCLIFE_RESUME { get; set; }
        public virtual DbSet<QUESTION_CLASSIFICATION> QUESTION_CLASSIFICATION { get; set; }
        public virtual DbSet<QUESTION_CLASSIFICATION_ANSWER> QUESTION_CLASSIFICATION_ANSWER { get; set; }
        public virtual DbSet<QUESTION_CLASSIFICATION_GUIDE> QUESTION_CLASSIFICATION_GUIDE { get; set; }
        public virtual DbSet<QUEUE> QUEUE { get; set; }
        public virtual DbSet<ROLE> ROLE { get; set; }
        public virtual DbSet<STORE> STORE { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<SYSTEM_LOG> SYSTEM_LOG { get; set; }
        public virtual DbSet<SYSTEM_PARAMETER> SYSTEM_PARAMETER { get; set; }
        public virtual DbSet<USER> USER { get; set; }
        public virtual DbSet<USER_PARAMETER> USER_PARAMETER { get; set; }
        public virtual DbSet<VENDOR_NODE> VENDOR_NODE { get; set; }
        public virtual DbSet<WORK_SCHEDULE> WORK_SCHEDULE { get; set; }
        public virtual DbSet<VW_KM_CLASSIFICATION_NESTED> VW_KM_CLASSIFICATION_NESTED { get; set; }
        public virtual DbSet<VW_QUESTION_CLASSIFICATION_ANSWER_NESTED> VW_QUESTION_CLASSIFICATION_ANSWER_NESTED { get; set; }
        public virtual DbSet<VW_QUESTION_CLASSIFICATION_GUIDE_NESTED> VW_QUESTION_CLASSIFICATION_GUIDE_NESTED { get; set; }
        public virtual DbSet<VW_UNION_ORGANIZATION> VW_UNION_ORGANIZATION { get; set; }
        public virtual DbSet<OFFICIAL_EMAIL_EFFECTIVE_DATA> OFFICIAL_EMAIL_EFFECTIVE_DATA { get; set; }
        public virtual DbSet<VW_QUESTION_CLASSIFICATION_NESTED> VW_QUESTION_CLASSIFICATION_NESTED { get; set; }
    
        public virtual ObjectResult<SP_PPCLIFE_BATCH_COMPLAINT_Result> SP_PPCLIFE_BATCH_COMPLAINT(Nullable<System.DateTime> starTime, Nullable<System.DateTime> endTime, string classificationID, Nullable<byte> type)
        {
            var starTimeParameter = starTime.HasValue ?
                new ObjectParameter("StarTime", starTime) :
                new ObjectParameter("StarTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var classificationIDParameter = classificationID != null ?
                new ObjectParameter("ClassificationID", classificationID) :
                new ObjectParameter("ClassificationID", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PPCLIFE_BATCH_COMPLAINT_Result>("SP_PPCLIFE_BATCH_COMPLAINT", starTimeParameter, endTimeParameter, classificationIDParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_ASSIGNMENT_COMPLAINT_COMMUNICATE_CALLCENTER_Result> SP_ASSIGNMENT_COMPLAINT_COMMUNICATE_CALLCENTER(Nullable<int> nodeID, Nullable<int> type, string caseID, Nullable<System.DateTime> createStarTime, Nullable<System.DateTime> createEndTime, Nullable<System.DateTime> noticeDateStarTime, Nullable<System.DateTime> noticeDateEndTime, string noticeContent, string caseContent, string caseClassificationIDGroup, string groupID)
        {
            var nodeIDParameter = nodeID.HasValue ?
                new ObjectParameter("NodeID", nodeID) :
                new ObjectParameter("NodeID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var caseIDParameter = caseID != null ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(string));
    
            var createStarTimeParameter = createStarTime.HasValue ?
                new ObjectParameter("CreateStarTime", createStarTime) :
                new ObjectParameter("CreateStarTime", typeof(System.DateTime));
    
            var createEndTimeParameter = createEndTime.HasValue ?
                new ObjectParameter("CreateEndTime", createEndTime) :
                new ObjectParameter("CreateEndTime", typeof(System.DateTime));
    
            var noticeDateStarTimeParameter = noticeDateStarTime.HasValue ?
                new ObjectParameter("NoticeDateStarTime", noticeDateStarTime) :
                new ObjectParameter("NoticeDateStarTime", typeof(System.DateTime));
    
            var noticeDateEndTimeParameter = noticeDateEndTime.HasValue ?
                new ObjectParameter("NoticeDateEndTime", noticeDateEndTime) :
                new ObjectParameter("NoticeDateEndTime", typeof(System.DateTime));
    
            var noticeContentParameter = noticeContent != null ?
                new ObjectParameter("NoticeContent", noticeContent) :
                new ObjectParameter("NoticeContent", typeof(string));
    
            var caseContentParameter = caseContent != null ?
                new ObjectParameter("CaseContent", caseContent) :
                new ObjectParameter("CaseContent", typeof(string));
    
            var caseClassificationIDGroupParameter = caseClassificationIDGroup != null ?
                new ObjectParameter("CaseClassificationIDGroup", caseClassificationIDGroup) :
                new ObjectParameter("CaseClassificationIDGroup", typeof(string));
    
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ASSIGNMENT_COMPLAINT_COMMUNICATE_CALLCENTER_Result>("SP_ASSIGNMENT_COMPLAINT_COMMUNICATE_CALLCENTER", nodeIDParameter, typeParameter, caseIDParameter, createStarTimeParameter, createEndTimeParameter, noticeDateStarTimeParameter, noticeDateEndTimeParameter, noticeContentParameter, caseContentParameter, caseClassificationIDGroupParameter, groupIDParameter);
        }
    
        public virtual ObjectResult<SP_ASSIGNMENT_COMPLAINT_COMMUNICATE_HEADQUARTER_STORE_Result> SP_ASSIGNMENT_COMPLAINT_COMMUNICATE_HEADQUARTER_STORE(Nullable<int> nodeID, Nullable<int> type, string caseID, Nullable<System.DateTime> createStarTime, Nullable<System.DateTime> createEndTime, Nullable<System.DateTime> noticeDateStarTime, Nullable<System.DateTime> noticeDateEndTime, string noticeContent, string caseContent, string caseClassificationIDGroup, string headNodeID, Nullable<byte> organizationType)
        {
            var nodeIDParameter = nodeID.HasValue ?
                new ObjectParameter("NodeID", nodeID) :
                new ObjectParameter("NodeID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var caseIDParameter = caseID != null ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(string));
    
            var createStarTimeParameter = createStarTime.HasValue ?
                new ObjectParameter("CreateStarTime", createStarTime) :
                new ObjectParameter("CreateStarTime", typeof(System.DateTime));
    
            var createEndTimeParameter = createEndTime.HasValue ?
                new ObjectParameter("CreateEndTime", createEndTime) :
                new ObjectParameter("CreateEndTime", typeof(System.DateTime));
    
            var noticeDateStarTimeParameter = noticeDateStarTime.HasValue ?
                new ObjectParameter("NoticeDateStarTime", noticeDateStarTime) :
                new ObjectParameter("NoticeDateStarTime", typeof(System.DateTime));
    
            var noticeDateEndTimeParameter = noticeDateEndTime.HasValue ?
                new ObjectParameter("NoticeDateEndTime", noticeDateEndTime) :
                new ObjectParameter("NoticeDateEndTime", typeof(System.DateTime));
    
            var noticeContentParameter = noticeContent != null ?
                new ObjectParameter("NoticeContent", noticeContent) :
                new ObjectParameter("NoticeContent", typeof(string));
    
            var caseContentParameter = caseContent != null ?
                new ObjectParameter("CaseContent", caseContent) :
                new ObjectParameter("CaseContent", typeof(string));
    
            var caseClassificationIDGroupParameter = caseClassificationIDGroup != null ?
                new ObjectParameter("CaseClassificationIDGroup", caseClassificationIDGroup) :
                new ObjectParameter("CaseClassificationIDGroup", typeof(string));
    
            var headNodeIDParameter = headNodeID != null ?
                new ObjectParameter("HeadNodeID", headNodeID) :
                new ObjectParameter("HeadNodeID", typeof(string));
    
            var organizationTypeParameter = organizationType.HasValue ?
                new ObjectParameter("OrganizationType", organizationType) :
                new ObjectParameter("OrganizationType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ASSIGNMENT_COMPLAINT_COMMUNICATE_HEADQUARTER_STORE_Result>("SP_ASSIGNMENT_COMPLAINT_COMMUNICATE_HEADQUARTER_STORE", nodeIDParameter, typeParameter, caseIDParameter, createStarTimeParameter, createEndTimeParameter, noticeDateStarTimeParameter, noticeDateEndTimeParameter, noticeContentParameter, caseContentParameter, caseClassificationIDGroupParameter, headNodeIDParameter, organizationTypeParameter);
        }
    
        public virtual ObjectResult<SP_ASSIGNMENT_COMPLAINT_INVOICE_CALLCENTER_Result> SP_ASSIGNMENT_COMPLAINT_INVOICE_CALLCENTER(Nullable<int> nodeID, Nullable<int> type, string caseID, Nullable<System.DateTime> createStarTime, Nullable<System.DateTime> createEndTime, Nullable<System.DateTime> noticeDateStarTime, Nullable<System.DateTime> noticeDateEndTime, string noticeContent, string caseContent, string caseClassificationIDGroup, string groupID)
        {
            var nodeIDParameter = nodeID.HasValue ?
                new ObjectParameter("NodeID", nodeID) :
                new ObjectParameter("NodeID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var caseIDParameter = caseID != null ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(string));
    
            var createStarTimeParameter = createStarTime.HasValue ?
                new ObjectParameter("CreateStarTime", createStarTime) :
                new ObjectParameter("CreateStarTime", typeof(System.DateTime));
    
            var createEndTimeParameter = createEndTime.HasValue ?
                new ObjectParameter("CreateEndTime", createEndTime) :
                new ObjectParameter("CreateEndTime", typeof(System.DateTime));
    
            var noticeDateStarTimeParameter = noticeDateStarTime.HasValue ?
                new ObjectParameter("NoticeDateStarTime", noticeDateStarTime) :
                new ObjectParameter("NoticeDateStarTime", typeof(System.DateTime));
    
            var noticeDateEndTimeParameter = noticeDateEndTime.HasValue ?
                new ObjectParameter("NoticeDateEndTime", noticeDateEndTime) :
                new ObjectParameter("NoticeDateEndTime", typeof(System.DateTime));
    
            var noticeContentParameter = noticeContent != null ?
                new ObjectParameter("NoticeContent", noticeContent) :
                new ObjectParameter("NoticeContent", typeof(string));
    
            var caseContentParameter = caseContent != null ?
                new ObjectParameter("CaseContent", caseContent) :
                new ObjectParameter("CaseContent", typeof(string));
    
            var caseClassificationIDGroupParameter = caseClassificationIDGroup != null ?
                new ObjectParameter("CaseClassificationIDGroup", caseClassificationIDGroup) :
                new ObjectParameter("CaseClassificationIDGroup", typeof(string));
    
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ASSIGNMENT_COMPLAINT_INVOICE_CALLCENTER_Result>("SP_ASSIGNMENT_COMPLAINT_INVOICE_CALLCENTER", nodeIDParameter, typeParameter, caseIDParameter, createStarTimeParameter, createEndTimeParameter, noticeDateStarTimeParameter, noticeDateEndTimeParameter, noticeContentParameter, caseContentParameter, caseClassificationIDGroupParameter, groupIDParameter);
        }
    
        public virtual ObjectResult<SP_ASSIGNMENT_COMPLAINT_INVOICE_HEADQUARTER_STORE_Result> SP_ASSIGNMENT_COMPLAINT_INVOICE_HEADQUARTER_STORE(Nullable<int> nodeID, Nullable<int> type, string caseID, Nullable<System.DateTime> createStarTime, Nullable<System.DateTime> createEndTime, Nullable<System.DateTime> noticeDateStarTime, Nullable<System.DateTime> noticeDateEndTime, string noticeContent, string caseContent, string caseClassificationIDGroup, string headNodeID, Nullable<byte> organizationType)
        {
            var nodeIDParameter = nodeID.HasValue ?
                new ObjectParameter("NodeID", nodeID) :
                new ObjectParameter("NodeID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var caseIDParameter = caseID != null ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(string));
    
            var createStarTimeParameter = createStarTime.HasValue ?
                new ObjectParameter("CreateStarTime", createStarTime) :
                new ObjectParameter("CreateStarTime", typeof(System.DateTime));
    
            var createEndTimeParameter = createEndTime.HasValue ?
                new ObjectParameter("CreateEndTime", createEndTime) :
                new ObjectParameter("CreateEndTime", typeof(System.DateTime));
    
            var noticeDateStarTimeParameter = noticeDateStarTime.HasValue ?
                new ObjectParameter("NoticeDateStarTime", noticeDateStarTime) :
                new ObjectParameter("NoticeDateStarTime", typeof(System.DateTime));
    
            var noticeDateEndTimeParameter = noticeDateEndTime.HasValue ?
                new ObjectParameter("NoticeDateEndTime", noticeDateEndTime) :
                new ObjectParameter("NoticeDateEndTime", typeof(System.DateTime));
    
            var noticeContentParameter = noticeContent != null ?
                new ObjectParameter("NoticeContent", noticeContent) :
                new ObjectParameter("NoticeContent", typeof(string));
    
            var caseContentParameter = caseContent != null ?
                new ObjectParameter("CaseContent", caseContent) :
                new ObjectParameter("CaseContent", typeof(string));
    
            var caseClassificationIDGroupParameter = caseClassificationIDGroup != null ?
                new ObjectParameter("CaseClassificationIDGroup", caseClassificationIDGroup) :
                new ObjectParameter("CaseClassificationIDGroup", typeof(string));
    
            var headNodeIDParameter = headNodeID != null ?
                new ObjectParameter("HeadNodeID", headNodeID) :
                new ObjectParameter("HeadNodeID", typeof(string));
    
            var organizationTypeParameter = organizationType.HasValue ?
                new ObjectParameter("OrganizationType", organizationType) :
                new ObjectParameter("OrganizationType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ASSIGNMENT_COMPLAINT_INVOICE_HEADQUARTER_STORE_Result>("SP_ASSIGNMENT_COMPLAINT_INVOICE_HEADQUARTER_STORE", nodeIDParameter, typeParameter, caseIDParameter, createStarTimeParameter, createEndTimeParameter, noticeDateStarTimeParameter, noticeDateEndTimeParameter, noticeContentParameter, caseContentParameter, caseClassificationIDGroupParameter, headNodeIDParameter, organizationTypeParameter);
        }
    
        public virtual ObjectResult<SP_ASSIGNMENT_COMPLAINT_NOTICE_CALLCENTER_Result> SP_ASSIGNMENT_COMPLAINT_NOTICE_CALLCENTER(Nullable<int> nodeID, Nullable<int> type, string caseID, Nullable<System.DateTime> createStarTime, Nullable<System.DateTime> createEndTime, Nullable<System.DateTime> noticeDateStarTime, Nullable<System.DateTime> noticeDateEndTime, string noticeContent, string caseContent, string caseClassificationIDGroup, string groupID)
        {
            var nodeIDParameter = nodeID.HasValue ?
                new ObjectParameter("NodeID", nodeID) :
                new ObjectParameter("NodeID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var caseIDParameter = caseID != null ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(string));
    
            var createStarTimeParameter = createStarTime.HasValue ?
                new ObjectParameter("CreateStarTime", createStarTime) :
                new ObjectParameter("CreateStarTime", typeof(System.DateTime));
    
            var createEndTimeParameter = createEndTime.HasValue ?
                new ObjectParameter("CreateEndTime", createEndTime) :
                new ObjectParameter("CreateEndTime", typeof(System.DateTime));
    
            var noticeDateStarTimeParameter = noticeDateStarTime.HasValue ?
                new ObjectParameter("NoticeDateStarTime", noticeDateStarTime) :
                new ObjectParameter("NoticeDateStarTime", typeof(System.DateTime));
    
            var noticeDateEndTimeParameter = noticeDateEndTime.HasValue ?
                new ObjectParameter("NoticeDateEndTime", noticeDateEndTime) :
                new ObjectParameter("NoticeDateEndTime", typeof(System.DateTime));
    
            var noticeContentParameter = noticeContent != null ?
                new ObjectParameter("NoticeContent", noticeContent) :
                new ObjectParameter("NoticeContent", typeof(string));
    
            var caseContentParameter = caseContent != null ?
                new ObjectParameter("CaseContent", caseContent) :
                new ObjectParameter("CaseContent", typeof(string));
    
            var caseClassificationIDGroupParameter = caseClassificationIDGroup != null ?
                new ObjectParameter("CaseClassificationIDGroup", caseClassificationIDGroup) :
                new ObjectParameter("CaseClassificationIDGroup", typeof(string));
    
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ASSIGNMENT_COMPLAINT_NOTICE_CALLCENTER_Result>("SP_ASSIGNMENT_COMPLAINT_NOTICE_CALLCENTER", nodeIDParameter, typeParameter, caseIDParameter, createStarTimeParameter, createEndTimeParameter, noticeDateStarTimeParameter, noticeDateEndTimeParameter, noticeContentParameter, caseContentParameter, caseClassificationIDGroupParameter, groupIDParameter);
        }
    
        public virtual ObjectResult<SP_ASSIGNMENT_COMPLAINT_NOTICE_HEADQUARTER_STORE_Result> SP_ASSIGNMENT_COMPLAINT_NOTICE_HEADQUARTER_STORE(Nullable<int> nodeID, Nullable<int> type, string caseID, Nullable<System.DateTime> createStarTime, Nullable<System.DateTime> createEndTime, Nullable<System.DateTime> noticeDateStarTime, Nullable<System.DateTime> noticeDateEndTime, string noticeContent, string caseContent, string caseClassificationIDGroup, string headNodeID, Nullable<byte> organizationType)
        {
            var nodeIDParameter = nodeID.HasValue ?
                new ObjectParameter("NodeID", nodeID) :
                new ObjectParameter("NodeID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var caseIDParameter = caseID != null ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(string));
    
            var createStarTimeParameter = createStarTime.HasValue ?
                new ObjectParameter("CreateStarTime", createStarTime) :
                new ObjectParameter("CreateStarTime", typeof(System.DateTime));
    
            var createEndTimeParameter = createEndTime.HasValue ?
                new ObjectParameter("CreateEndTime", createEndTime) :
                new ObjectParameter("CreateEndTime", typeof(System.DateTime));
    
            var noticeDateStarTimeParameter = noticeDateStarTime.HasValue ?
                new ObjectParameter("NoticeDateStarTime", noticeDateStarTime) :
                new ObjectParameter("NoticeDateStarTime", typeof(System.DateTime));
    
            var noticeDateEndTimeParameter = noticeDateEndTime.HasValue ?
                new ObjectParameter("NoticeDateEndTime", noticeDateEndTime) :
                new ObjectParameter("NoticeDateEndTime", typeof(System.DateTime));
    
            var noticeContentParameter = noticeContent != null ?
                new ObjectParameter("NoticeContent", noticeContent) :
                new ObjectParameter("NoticeContent", typeof(string));
    
            var caseContentParameter = caseContent != null ?
                new ObjectParameter("CaseContent", caseContent) :
                new ObjectParameter("CaseContent", typeof(string));
    
            var caseClassificationIDGroupParameter = caseClassificationIDGroup != null ?
                new ObjectParameter("CaseClassificationIDGroup", caseClassificationIDGroup) :
                new ObjectParameter("CaseClassificationIDGroup", typeof(string));
    
            var headNodeIDParameter = headNodeID != null ?
                new ObjectParameter("HeadNodeID", headNodeID) :
                new ObjectParameter("HeadNodeID", typeof(string));
    
            var organizationTypeParameter = organizationType.HasValue ?
                new ObjectParameter("OrganizationType", organizationType) :
                new ObjectParameter("OrganizationType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ASSIGNMENT_COMPLAINT_NOTICE_HEADQUARTER_STORE_Result>("SP_ASSIGNMENT_COMPLAINT_NOTICE_HEADQUARTER_STORE", nodeIDParameter, typeParameter, caseIDParameter, createStarTimeParameter, createEndTimeParameter, noticeDateStarTimeParameter, noticeDateEndTimeParameter, noticeContentParameter, caseContentParameter, caseClassificationIDGroupParameter, headNodeIDParameter, organizationTypeParameter);
        }
    
        public virtual ObjectResult<SP_ASSIGNMENT_SEARCH_CALLCENTER_Result> SP_ASSIGNMENT_SEARCH_CALLCENTER(Nullable<int> nodeID, Nullable<int> type, string caseID, Nullable<System.DateTime> createStarTime, Nullable<System.DateTime> createEndTime, Nullable<System.DateTime> noticeDateStarTime, Nullable<System.DateTime> noticeDateEndTime, string noticeContent, string caseContent, string caseClassificationIDGroup, string groupID)
        {
            var nodeIDParameter = nodeID.HasValue ?
                new ObjectParameter("NodeID", nodeID) :
                new ObjectParameter("NodeID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var caseIDParameter = caseID != null ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(string));
    
            var createStarTimeParameter = createStarTime.HasValue ?
                new ObjectParameter("CreateStarTime", createStarTime) :
                new ObjectParameter("CreateStarTime", typeof(System.DateTime));
    
            var createEndTimeParameter = createEndTime.HasValue ?
                new ObjectParameter("CreateEndTime", createEndTime) :
                new ObjectParameter("CreateEndTime", typeof(System.DateTime));
    
            var noticeDateStarTimeParameter = noticeDateStarTime.HasValue ?
                new ObjectParameter("NoticeDateStarTime", noticeDateStarTime) :
                new ObjectParameter("NoticeDateStarTime", typeof(System.DateTime));
    
            var noticeDateEndTimeParameter = noticeDateEndTime.HasValue ?
                new ObjectParameter("NoticeDateEndTime", noticeDateEndTime) :
                new ObjectParameter("NoticeDateEndTime", typeof(System.DateTime));
    
            var noticeContentParameter = noticeContent != null ?
                new ObjectParameter("NoticeContent", noticeContent) :
                new ObjectParameter("NoticeContent", typeof(string));
    
            var caseContentParameter = caseContent != null ?
                new ObjectParameter("CaseContent", caseContent) :
                new ObjectParameter("CaseContent", typeof(string));
    
            var caseClassificationIDGroupParameter = caseClassificationIDGroup != null ?
                new ObjectParameter("CaseClassificationIDGroup", caseClassificationIDGroup) :
                new ObjectParameter("CaseClassificationIDGroup", typeof(string));
    
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ASSIGNMENT_SEARCH_CALLCENTER_Result>("SP_ASSIGNMENT_SEARCH_CALLCENTER", nodeIDParameter, typeParameter, caseIDParameter, createStarTimeParameter, createEndTimeParameter, noticeDateStarTimeParameter, noticeDateEndTimeParameter, noticeContentParameter, caseContentParameter, caseClassificationIDGroupParameter, groupIDParameter);
        }
    
        public virtual ObjectResult<SP_ASSIGNMENT_SEARCH_HEADQUARTER_STORE_Result> SP_ASSIGNMENT_SEARCH_HEADQUARTER_STORE(Nullable<int> nodeID, Nullable<int> type, string caseID, Nullable<System.DateTime> createStarTime, Nullable<System.DateTime> createEndTime, Nullable<System.DateTime> noticeDateStarTime, Nullable<System.DateTime> noticeDateEndTime, string noticeContent, string caseContent, string caseClassificationIDGroup, string headNodeID, Nullable<byte> organizationType)
        {
            var nodeIDParameter = nodeID.HasValue ?
                new ObjectParameter("NodeID", nodeID) :
                new ObjectParameter("NodeID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var caseIDParameter = caseID != null ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(string));
    
            var createStarTimeParameter = createStarTime.HasValue ?
                new ObjectParameter("CreateStarTime", createStarTime) :
                new ObjectParameter("CreateStarTime", typeof(System.DateTime));
    
            var createEndTimeParameter = createEndTime.HasValue ?
                new ObjectParameter("CreateEndTime", createEndTime) :
                new ObjectParameter("CreateEndTime", typeof(System.DateTime));
    
            var noticeDateStarTimeParameter = noticeDateStarTime.HasValue ?
                new ObjectParameter("NoticeDateStarTime", noticeDateStarTime) :
                new ObjectParameter("NoticeDateStarTime", typeof(System.DateTime));
    
            var noticeDateEndTimeParameter = noticeDateEndTime.HasValue ?
                new ObjectParameter("NoticeDateEndTime", noticeDateEndTime) :
                new ObjectParameter("NoticeDateEndTime", typeof(System.DateTime));
    
            var noticeContentParameter = noticeContent != null ?
                new ObjectParameter("NoticeContent", noticeContent) :
                new ObjectParameter("NoticeContent", typeof(string));
    
            var caseContentParameter = caseContent != null ?
                new ObjectParameter("CaseContent", caseContent) :
                new ObjectParameter("CaseContent", typeof(string));
    
            var caseClassificationIDGroupParameter = caseClassificationIDGroup != null ?
                new ObjectParameter("CaseClassificationIDGroup", caseClassificationIDGroup) :
                new ObjectParameter("CaseClassificationIDGroup", typeof(string));
    
            var headNodeIDParameter = headNodeID != null ?
                new ObjectParameter("HeadNodeID", headNodeID) :
                new ObjectParameter("HeadNodeID", typeof(string));
    
            var organizationTypeParameter = organizationType.HasValue ?
                new ObjectParameter("OrganizationType", organizationType) :
                new ObjectParameter("OrganizationType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ASSIGNMENT_SEARCH_HEADQUARTER_STORE_Result>("SP_ASSIGNMENT_SEARCH_HEADQUARTER_STORE", nodeIDParameter, typeParameter, caseIDParameter, createStarTimeParameter, createEndTimeParameter, noticeDateStarTimeParameter, noticeDateEndTimeParameter, noticeContentParameter, caseContentParameter, caseClassificationIDGroupParameter, headNodeIDParameter, organizationTypeParameter);
        }
    
        public virtual ObjectResult<SP_CASE_SEARCH_CALLCENTER_Result> SP_CASE_SEARCH_CALLCENTER(Nullable<int> nodeID, Nullable<int> caseSourceType, string caseID, Nullable<System.DateTime> createStarTime, Nullable<System.DateTime> createEndTime, string caseContent, string finishContent, string applyUserID, Nullable<System.DateTime> expectDateStarTime, Nullable<System.DateTime> expectDateEndTime, Nullable<int> caseWarningID, Nullable<int> caseType, string caseClassificationIDGroup, string groupID)
        {
            var nodeIDParameter = nodeID.HasValue ?
                new ObjectParameter("NodeID", nodeID) :
                new ObjectParameter("NodeID", typeof(int));
    
            var caseSourceTypeParameter = caseSourceType.HasValue ?
                new ObjectParameter("CaseSourceType", caseSourceType) :
                new ObjectParameter("CaseSourceType", typeof(int));
    
            var caseIDParameter = caseID != null ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(string));
    
            var createStarTimeParameter = createStarTime.HasValue ?
                new ObjectParameter("CreateStarTime", createStarTime) :
                new ObjectParameter("CreateStarTime", typeof(System.DateTime));
    
            var createEndTimeParameter = createEndTime.HasValue ?
                new ObjectParameter("CreateEndTime", createEndTime) :
                new ObjectParameter("CreateEndTime", typeof(System.DateTime));
    
            var caseContentParameter = caseContent != null ?
                new ObjectParameter("CaseContent", caseContent) :
                new ObjectParameter("CaseContent", typeof(string));
    
            var finishContentParameter = finishContent != null ?
                new ObjectParameter("FinishContent", finishContent) :
                new ObjectParameter("FinishContent", typeof(string));
    
            var applyUserIDParameter = applyUserID != null ?
                new ObjectParameter("ApplyUserID", applyUserID) :
                new ObjectParameter("ApplyUserID", typeof(string));
    
            var expectDateStarTimeParameter = expectDateStarTime.HasValue ?
                new ObjectParameter("ExpectDateStarTime", expectDateStarTime) :
                new ObjectParameter("ExpectDateStarTime", typeof(System.DateTime));
    
            var expectDateEndTimeParameter = expectDateEndTime.HasValue ?
                new ObjectParameter("ExpectDateEndTime", expectDateEndTime) :
                new ObjectParameter("ExpectDateEndTime", typeof(System.DateTime));
    
            var caseWarningIDParameter = caseWarningID.HasValue ?
                new ObjectParameter("CaseWarningID", caseWarningID) :
                new ObjectParameter("CaseWarningID", typeof(int));
    
            var caseTypeParameter = caseType.HasValue ?
                new ObjectParameter("CaseType", caseType) :
                new ObjectParameter("CaseType", typeof(int));
    
            var caseClassificationIDGroupParameter = caseClassificationIDGroup != null ?
                new ObjectParameter("CaseClassificationIDGroup", caseClassificationIDGroup) :
                new ObjectParameter("CaseClassificationIDGroup", typeof(string));
    
            var groupIDParameter = groupID != null ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CASE_SEARCH_CALLCENTER_Result>("SP_CASE_SEARCH_CALLCENTER", nodeIDParameter, caseSourceTypeParameter, caseIDParameter, createStarTimeParameter, createEndTimeParameter, caseContentParameter, finishContentParameter, applyUserIDParameter, expectDateStarTimeParameter, expectDateEndTimeParameter, caseWarningIDParameter, caseTypeParameter, caseClassificationIDGroupParameter, groupIDParameter);
        }
    
        public virtual ObjectResult<SP_CASE_SEARCH_HEADQUARTER_STORE_Result> SP_CASE_SEARCH_HEADQUARTER_STORE(Nullable<int> nodeID, Nullable<int> caseSourceType, string caseID, Nullable<System.DateTime> createStarTime, Nullable<System.DateTime> createEndTime, string caseContent, string finishContent, Nullable<int> caseWarningID, Nullable<int> caseType, string caseClassificationIDGroup, string headNodeID)
        {
            var nodeIDParameter = nodeID.HasValue ?
                new ObjectParameter("NodeID", nodeID) :
                new ObjectParameter("NodeID", typeof(int));
    
            var caseSourceTypeParameter = caseSourceType.HasValue ?
                new ObjectParameter("CaseSourceType", caseSourceType) :
                new ObjectParameter("CaseSourceType", typeof(int));
    
            var caseIDParameter = caseID != null ?
                new ObjectParameter("CaseID", caseID) :
                new ObjectParameter("CaseID", typeof(string));
    
            var createStarTimeParameter = createStarTime.HasValue ?
                new ObjectParameter("CreateStarTime", createStarTime) :
                new ObjectParameter("CreateStarTime", typeof(System.DateTime));
    
            var createEndTimeParameter = createEndTime.HasValue ?
                new ObjectParameter("CreateEndTime", createEndTime) :
                new ObjectParameter("CreateEndTime", typeof(System.DateTime));
    
            var caseContentParameter = caseContent != null ?
                new ObjectParameter("CaseContent", caseContent) :
                new ObjectParameter("CaseContent", typeof(string));
    
            var finishContentParameter = finishContent != null ?
                new ObjectParameter("FinishContent", finishContent) :
                new ObjectParameter("FinishContent", typeof(string));
    
            var caseWarningIDParameter = caseWarningID.HasValue ?
                new ObjectParameter("CaseWarningID", caseWarningID) :
                new ObjectParameter("CaseWarningID", typeof(int));
    
            var caseTypeParameter = caseType.HasValue ?
                new ObjectParameter("CaseType", caseType) :
                new ObjectParameter("CaseType", typeof(int));
    
            var caseClassificationIDGroupParameter = caseClassificationIDGroup != null ?
                new ObjectParameter("CaseClassificationIDGroup", caseClassificationIDGroup) :
                new ObjectParameter("CaseClassificationIDGroup", typeof(string));
    
            var headNodeIDParameter = headNodeID != null ?
                new ObjectParameter("HeadNodeID", headNodeID) :
                new ObjectParameter("HeadNodeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CASE_SEARCH_HEADQUARTER_STORE_Result>("SP_CASE_SEARCH_HEADQUARTER_STORE", nodeIDParameter, caseSourceTypeParameter, caseIDParameter, createStarTimeParameter, createEndTimeParameter, caseContentParameter, finishContentParameter, caseWarningIDParameter, caseTypeParameter, caseClassificationIDGroupParameter, headNodeIDParameter);
        }
    
        public virtual ObjectResult<string> SP_FILTER_NODE_ID_CASE(string caseList, string nodeKeyList)
        {
            var caseListParameter = caseList != null ?
                new ObjectParameter("CaseList", caseList) :
                new ObjectParameter("CaseList", typeof(string));
    
            var nodeKeyListParameter = nodeKeyList != null ?
                new ObjectParameter("NodeKeyList", nodeKeyList) :
                new ObjectParameter("NodeKeyList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_FILTER_NODE_ID_CASE", caseListParameter, nodeKeyListParameter);
        }
    
        public virtual ObjectResult<SP_PPCLIFE_BATCH_RECORD_Result> SP_PPCLIFE_BATCH_RECORD(Nullable<System.DateTime> starTime, Nullable<System.DateTime> endTime, string classificationID, Nullable<byte> sourceType, Nullable<byte> nodeID)
        {
            var starTimeParameter = starTime.HasValue ?
                new ObjectParameter("StarTime", starTime) :
                new ObjectParameter("StarTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var classificationIDParameter = classificationID != null ?
                new ObjectParameter("ClassificationID", classificationID) :
                new ObjectParameter("ClassificationID", typeof(string));
    
            var sourceTypeParameter = sourceType.HasValue ?
                new ObjectParameter("SourceType", sourceType) :
                new ObjectParameter("SourceType", typeof(byte));
    
            var nodeIDParameter = nodeID.HasValue ?
                new ObjectParameter("NodeID", nodeID) :
                new ObjectParameter("NodeID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PPCLIFE_BATCH_RECORD_Result>("SP_PPCLIFE_BATCH_RECORD", starTimeParameter, endTimeParameter, classificationIDParameter, sourceTypeParameter, nodeIDParameter);
        }
    }
}
