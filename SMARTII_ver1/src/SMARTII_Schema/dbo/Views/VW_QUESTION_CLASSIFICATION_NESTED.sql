
















CREATE VIEW [dbo].[VW_QUESTION_CLASSIFICATION_NESTED]   AS
WITH QUESTION_CLASSIFICATION_NESTED(
    NODE_ID,
	ID ,
    PARENT_ID ,
    [NAME],
    ORGANIZATION_TYPE,
	IS_ENABLED,
    LEVEL,
    PARENT_PATH,
    PARENT_PATH_NAME,
	CREATE_DATETIME,
	CREATE_USERNAME,
	UPDATE_DATETIME,
	UPDATE_USERNAME,
	[ORDER],
	CODE,
	FRISTCODE)
AS(
 SELECT
    NODE_ID ,
    ID ,
    PARENT_ID ,
    [NAME],
    ORGANIZATION_TYPE ,
	IS_ENABLED,
    1 AS LEVEL,
    CONVERT(nvarchar(128), ID) AS PARENT_PATH,
    CONVERT(nvarchar(128), [NAME]) AS  PARENT_PATH_NAME,
	CREATE_DATETIME,
	CREATE_USERNAME,
	UPDATE_DATETIME,
	UPDATE_USERNAME,
	[ORDER],
	CODE,
	CODE AS FRISTCODE
 FROM [dbo].QUESTION_CLASSIFICATION
 WHERE PARENT_ID IS NULL
 UNION ALL
 SELECT
    S.NODE_ID ,
    S.ID ,
    S.PARENT_ID ,
    S.[NAME],
    S.ORGANIZATION_TYPE ,
	S.IS_ENABLED,
    P.LEVEL + 1 AS LEVEL ,
    CONVERT(nvarchar(128), P.PARENT_PATH + '@' +  CONVERT(nvarchar(128),S.ID)),
    CONVERT(nvarchar(128), P.PARENT_PATH_NAME + '@' +  S.NAME),
	S.CREATE_DATETIME,
	S.CREATE_USERNAME,
	S.UPDATE_DATETIME,
	S.UPDATE_USERNAME,
	S.[ORDER] AS [ORDER],
	S.CODE AS CODE,
	P.FRISTCODE
 FROM [dbo].QUESTION_CLASSIFICATION S
 JOIN QUESTION_CLASSIFICATION_NESTED P
 ON S.PARENT_ID = P.ID
)
SELECT 
    ISNULL(row_number() over(order by ID),0) as [INDEX],
    NODE_ID,
	CODE,
	FRISTCODE,
    ID ,
    PARENT_ID ,
    [NAME],
    ORGANIZATION_TYPE,
	IS_ENABLED,
    LEVEL,
	[ORDER],
    PARENT_PATH,
    PARENT_PATH_NAME,
	CREATE_DATETIME,
	CREATE_USERNAME,
	UPDATE_DATETIME,
	UPDATE_USERNAME

FROM QUESTION_CLASSIFICATION_NESTED 
